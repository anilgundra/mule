<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
	<flow name="matchFlow" doc:id="c0cfc761-2085-4e4c-8747-5bdef066ac02" >
		<http:listener doc:name="Listener" doc:id="fb5a0a3d-9849-42b0-8b1b-ecf3efaa9bac" config-ref="HTTP_Listener_8081" path="/match"/>
		<ee:transform doc:name="Transform Message" doc:id="72696232-fd60-4710-887a-b8857a257865" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
var a=read('{"name":"anil","mobile":9059334489,"mail" : "anil.gundra@gmail.com"}',"application/json")
var b=["anil","sunil","vani"]
var c={
	"a":"anil",
	"b":"sunil"
}
---
Result:{
	CapitalLetter: b map {
		S:upper($)
	},
	pluckUsage: {
		p: c pluck (value,key,index) -> { (index) : { (value)} }
	},
	R1:a.name match{
	case word if(word == "anial")  -> "it's Okay"
	case word is String -> "check it"
	else -> $ as String ++ " is not okay "
	},

	R2:a.mail match {
		case mail matches /a.*\d+/  -> "phone number is ok"
		else -> $ as String ++ " is not number "
	}
}

]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="08bac217-113f-49bb-ae66-fcc1a5401ac9" />
	</flow>
</mule>
