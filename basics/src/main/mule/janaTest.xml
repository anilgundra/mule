<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:mllp="http://www.mulesoft.org/schema/mule/mllp" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/mllp http://www.mulesoft.org/schema/mule/mllp/current/mule-mllp.xsd">
	<flow name="janaTestFlow" doc:id="181c8dd9-43ec-4097-99c9-277ed5678e0d" >
		<ee:transform doc:name="Transform Message" doc:id="deeaf7d4-3bf1-4d02-a980-7bd9eb06bb10" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
import * from dw::core::Strings
var num= 1234
var str="Mule soft"
var phoneNum="123-456 (7890)"
var obj1= [{"name":"anil","addr":"vskp","sal":2000,"age":28},
	{"name":"sunil","addr":"vskp","sal":5000,"age":29},
	{"name":"vani","addr":"vskp","sal":4000,"age":27},
	{"name":"linga","addr":"vskp","sal":4000,"age":30}
]
---
Test:{
	phoneFormat:
	match: matches("123-123 (7890)",/[0-9]{3}-[0-9]{3}\s\([0-9]{4}\)/),
	padTest: leftPad(num,8) replace ' ' with ('0'),
	padNum: num as String{format:"00000000"},
	orderTest:obj1 orderBy ($.sal as String {format:"00000000"} ++ $.age as String{format:"00000000"}),
	contains:obj1 map (value,index)-> (index + 1 ++ "emp"):value,

	//match: matches(phoneNum ,/[0-9]{3}-[0-9]{3}\s([0-9]{4})/)
}
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
</mule>
